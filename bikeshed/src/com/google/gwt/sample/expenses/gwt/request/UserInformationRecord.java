/*
 * Copyright 2010 Google Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package com.google.gwt.sample.expenses.gwt.request;

import com.google.gwt.requestfactory.shared.DataTransferObject;
import com.google.gwt.requestfactory.shared.UserInformation;
import com.google.gwt.sample.expenses.server.domain.GaeUserInformation;
import com.google.gwt.valuestore.shared.Property;
import com.google.gwt.valuestore.shared.Record;

/**
 * "API Generated" DTO interface based on
 * {@link com.google.gwt.sample.expenses.server.domain.GaeUserInformation}.
 * <p>
 * IRL this class will be generated by a JPA-savvy tool run before compilation.
 */
@DataTransferObject(GaeUserInformation.class)
public interface UserInformationRecord extends Record, UserInformation {
  Property<String> email =
    new Property<String>("email", "Email", String.class);
  Property<String> loginUrl =
    new Property<String>("loginUrl", "LoginUrl", String.class);
  Property<String> logoutUrl =
    new Property<String>("logoutUrl", "LogoutUrl", String.class);
  Property<String> name =
    new Property<String>("name", "Name", String.class);
  
  // Most of the actual getXxx calls come from the UserInformationProvider
  // interface

}
