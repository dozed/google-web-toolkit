/*
 * Copyright 2011 Google Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package com.google.gwt.uibinder.client;

import com.google.gwt.dom.client.Element;
import com.google.gwt.dom.client.NativeEvent;

/**
 * Abstract implementation of a safe HTML binder to make implementation of generated rendering
 * simpler.
 * 
 * @param <T> the type to render
 */
public abstract class AbstractUiRenderer<T> implements UiRenderer<T> {

  /**
   * Marker attribute for DOM structures previously generated by UiRenderer.
   */
  public static final String RENDERED_ATTRIBUTE = "gwtuirendered";

  /**
   * Holds the part of the id attribute common to all elements being rendered.
   */
  protected String uiId;

  @Override
  public boolean isParentOrRenderer(Element parent) {
    if (parent == null) {
      return false;
    }
    
    Element root;
    try {
      root = UiRendererUtilsImpl.findRootElement(parent, RENDERED_ATTRIBUTE);
      return UiRendererUtilsImpl.isAttachedToDom(root)
          && UiRendererUtilsImpl.isRenderedElementSingleChild(root);
    } catch (IllegalArgumentException e) {
      return false;
    }
  }

  @Override
  public void onBrowserEvent(T cell, Element parent, NativeEvent event) {
    // Trivial implementation when no @UiHandlers
  }
}
